class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        // Step 1: sort intervals by start
        sort(intervals.begin(), intervals.end());

        vector<vector<int>> result;
        result.push_back(intervals[0]);

        // Step 2: iterate over intervals
        for (int i = 1; i < intervals.size(); i++) {
            // get last merged interval
            vector<int> &last = result.back();

            if (intervals[i][0] <= last[1]) {
                // overlap -> merge
                last[1] = max(last[1], intervals[i][1]);
            } else {
                // no overlap -> push
                result.push_back(intervals[i]);
            }
        }
        return result;
    }
};
