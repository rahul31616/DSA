#include <bits/stdc++.h>
using namespace std;

class Solution {
public:
    vector<int> findUniqueNumbers(const vector<int>& arr) {
        int xor_all = 0;
        for (int num : arr) {
            xor_all ^= num;
        }

        // Find a set bit (rightmost bit) in xor_all
        int bit_mask = xor_all & -xor_all;

        int x = 0, y = 0;
        for (int num : arr) {
            if (num & bit_mask)
                x ^= num;
            else
                y ^= num;
        }

        return {x, y};
    }
};

int main() {
    int N;
    cin >> N;  // size of array (should be 2n + 2)
    vector<int> arr(N);
    for (int i = 0; i < N; i++)
        cin >> arr[i];

    Solution sol;
    auto result = sol.findUniqueNumbers(arr);
    cout << result[0] << " " << result[1] << "\n";
    return 0;
}
