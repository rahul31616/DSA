#include <bits/stdc++.h>
using namespace std;

class Solution {
public:
    void nextPermutation(vector<int>& nums) {
        int n = nums.size();
        int i = n - 2;

        // Step 1: find first decreasing element
        while (i >= 0 && nums[i] >= nums[i + 1]) {
            i--;
        }

        if (i >= 0) {
            // Step 2: find element just larger than nums[i]
            int j = n - 1;
            while (nums[j] <= nums[i]) {
                j--;
            }
            swap(nums[i], nums[j]);
        }

        // Step 3: reverse the suffix
        reverse(nums.begin() + i + 1, nums.end());
    }
};

int main() {
    Solution sol;
    vector<int> nums1 = {1,2,3};
    sol.nextPermutation(nums1);
    for (int x : nums1) cout << x << " "; // 1 3 2
    cout << endl;

    vector<int> nums2 = {3,2,1};
    sol.nextPermutation(nums2);
    for (int x : nums2) cout << x << " "; // 1 2 3
    cout << endl;

    vector<int> nums3 = {1,1,5};
    sol.nextPermutation(nums3);
    for (int x : nums3) cout << x << " "; // 1 5 1
    cout << endl;
}
