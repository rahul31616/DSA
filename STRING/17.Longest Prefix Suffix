#include <bits/stdc++.h>
using namespace std;

class Solution {
public:
    int lps(string s) {
        int n = s.size();
        vector<int> lpsArr(n, 0); // store lps values
        int len = 0;  // length of previous lps
        int i = 1;

        while (i < n) {
            if (s[i] == s[len]) {
                len++;
                lpsArr[i] = len;
                i++;
            } else {
                if (len != 0) {
                    len = lpsArr[len - 1]; // try smaller prefix
                } else {
                    lpsArr[i] = 0;
                    i++;
                }
            }
        }
        return lpsArr[n - 1]; // result is last entry
    }
};

int main() {
    Solution sol;
    cout << sol.lps("abcaabc") << endl;   // 3
    cout << sol.lps("aaaa") << endl;      // 3
    cout << sol.lps("abcd") << endl;      // 0
}
