Recursive DFS Solution (Simple & Common in Interviews)
cpp
Copy
Edit
class Solution {
public:
    int maxDepth(TreeNode* root) {
        if (root == NULL) return 0; // empty tree has depth 0
        int leftDepth = maxDepth(root->left);
        int rightDepth = maxDepth(root->right);
        return 1 + max(leftDepth, rightDepth); // 1 for current node
    }
};


Iterative BFS Version (Level Order Traversal)
cpp
Copy
Edit
class Solution {
public:
    int maxDepth(TreeNode* root) {
        if (!root) return 0;
        queue<TreeNode*> q;
        q.push(root);
        int depth = 0;
        
        while (!q.empty()) {
            int size = q.size();
            while (size--) {
                TreeNode* node = q.front(); q.pop();
                if (node->left) q.push(node->left);
                if (node->right) q.push(node->right);
            }
            depth++;
        }
        return depth;
    }
};
