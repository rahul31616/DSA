C++ Recursive Solution
cpp
Copy
Edit
class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
        if (!root) return nullptr;

        // swap children
        swap(root->left, root->right);

        // recursively invert subtrees
        invertTree(root->left);
        invertTree(root->right);

        return root;
    }
};
C++ Iterative (BFS) Solution
cpp
Copy
Edit
class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
        if (!root) return nullptr;

        queue<TreeNode*> q;
        q.push(root);

        while (!q.empty()) {
            TreeNode* node = q.front();
            q.pop();

            swap(node->left, node->right);

            if (node->left) q.push(node->left);
            if (node->right) q.push(node->right);
        }
        return root;
    }
};
