      1
     / \
    2   3
   / \   \
  4   5   6
       \
        7

Left View: 1, 2, 4, 7


#include <bits/stdc++.h>
using namespace std;

struct Node {
    int data;
    Node* left;
    Node* right;
    Node(int val) : data(val), left(NULL), right(NULL) {}
};

vector<int> leftView(Node* root) {
    vector<int> result;
    if (!root) return result;

    queue<Node*> q;
    q.push(root);

    while (!q.empty()) {
        int n = q.size();  // Number of nodes at current level
        for (int i = 0; i < n; i++) {
            Node* curr = q.front();
            q.pop();
            // First node of the current level
            if (i == 0) result.push_back(curr->data);

            if (curr->left) q.push(curr->left);
            if (curr->right) q.push(curr->right);
        }
    }
    return result;
}

int main() {
    Node* root = new Node(1);
    root->left = new Node(2);
    root->right = new Node(3);
    root->left->left = new Node(4);
    root->left->right = new Node(5);
    root->right->right = new Node(6);
    root->left->right->right = new Node(7);

    vector<int> view = leftView(root);
    for (int val : view) cout << val << " ";
}
