#include <iostream>
#include <unordered_set>
using namespace std;

struct Node {
    int data;
    Node* next;
    Node(int x) : data(x), next(nullptr) {}
};

// Function to remove duplicates
void removeDuplicates(Node* head) {
    if (!head) return;

    unordered_set<int> seen;
    Node* current = head;
    Node* prev = nullptr;

    while (current) {
        if (seen.count(current->data)) {
            prev->next = current->next;
            delete current; // free memory
        } else {
            seen.insert(current->data);
            prev = current;
        }
        current = prev->next;
    }
}

// Helper to print list
void printList(Node* head) {
    while (head) {
        cout << head->data << " ";
        head = head->next;
    }
    cout << endl;
}

// Sample usage
int main() {
    Node* head = new Node(10);
    head->next = new Node(12);
    head->next->next = new Node(11);
    head->next->next->next = new Node(11);
    head->next->next->next->next = new Node(12);
    head->next->next->next->next->next = new Node(11);

    cout << "Original List: ";
    printList(head);

    removeDuplicates(head);

    cout << "After Removing Duplicates: ";
    printList(head);

    return 0;
}
