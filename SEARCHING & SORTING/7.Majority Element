Input:  arr[] = {3, 3, 4, 2, 4, 4, 2, 4, 4}
Output: 4

Input:  arr[] = {3, 3, 4, 2, 4, 4, 2, 4}
Output: -1

#include <iostream>
using namespace std;

int majorityElement(int arr[], int n) {
    int count = 0, candidate = -1;

    // Phase 1: Find a candidate
    for (int i = 0; i < n; i++) {
        if (count == 0) {
            candidate = arr[i];
            count = 1;
        } else if (arr[i] == candidate)
            count++;
        else
            count--;
    }

    // Phase 2: Verify the candidate
    count = 0;
    for (int i = 0; i < n; i++) {
        if (arr[i] == candidate)
            count++;
    }

    return (count > n / 2) ? candidate : -1;
}

int main() {
    int arr[] = {3, 3, 4, 2, 4, 4, 2, 4, 4};
    int n = sizeof(arr) / sizeof(arr[0]);

    int result = majorityElement(arr, n);
    if (result != -1)
        cout << "Majority Element: " << result << endl;
    else
        cout << "No Majority Element found." << endl;

    return 0;
}

Input: [3, 3, 4, 2, 4, 4, 2, 4, 4], n = 9

Phase 1:
- i=0: count=1, candidate=3
- i=1: arr[i]=3 → count=2
- i=2: arr[i]=4 ≠ 3 → count=1
- i=3: arr[i]=2 ≠ 3 → count=0
- i=4: count=0 → candidate=4, count=1
- i=5: arr[i]=4 → count=2
- i=6: arr[i]=2 ≠ 4 → count=1
- i=7: arr[i]=4 → count=2
- i=8: arr[i]=4 → count=3

Candidate = 4

Phase 2:
Count 4s in array → 5 times → 5 > 4.5 ⇒ Valid majority


